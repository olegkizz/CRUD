@model IdentityNLayer.Models.CourseModel
@inject IdentityNLayer.BLL.Interfaces.ICourseService courseService

@{
    ViewData["Title"] = "Edit";
}

<h1>Edit</h1>

<h4>Course</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />
            <div class="form-group">
                <label asp-for="Title" class="control-label"></label>
                <input asp-for="Title" class="form-control" />
                <span asp-validation-for="Title" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Description" class="control-label"></label>
                <input asp-for="Description" class="form-control" />
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Program" class="control-label"></label>
                <input asp-for="Program" class="form-control" />
                <span asp-validation-for="Program" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Topic.Title" class="control-label"></label>
                @Html.DropDownListFor(model => model.TopicId, new SelectList(courseService.GetAvailableTopics(), "Id", "Title"))
                <span asp-validation-for="Topic.Title" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="StartDate" class="control-label"></label>
                <input asp-for="StartDate" class="form-control" />
                <span asp-validation-for="StartDate" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label class="control-label">StudentRequests</label>
                <span class="text-danger">@courseService.GetStudentRequests(Model.Id).Count()</span>
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
            <div class="form-group">
                @{ Dictionary<string, string> courseId = new Dictionary<string, string>() { { "courseId", Model.Id.ToString() } }; }
                <a asp-controller="Groups" asp-action="Create" asp-all-route-data="courseId" class="btn btn-primary">Create Groups</a>
            </div>
            <div class="form-group" style="color: red">@courseService.GetStudentRequests(Model.Id).Count()</div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
            <div class="form-group">
                <button asp-controller="Group" asp-action="Create" class="btn btn-primary">Create Groups</button>
            </div>
            <div class="form-group">
                @Html.DropDownListFor(model => model.AvailableGroupId, new SelectList(courseService.GetAvailableGroups(Model.Id), "Id", "Title"))
            </div>
            <div class="form-group">
                @{ Dictionary<string, string> groupId = new Dictionary<string, string>() { { "groupId", Model.AvailableGroupId.ToString() } }; }
                <button asp-controller="Group" asp-action="Edit" asp-all-route-data="groupId" class="btn btn-primary">Adding to Selected Groups</button>
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
