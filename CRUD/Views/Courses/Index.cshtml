@model IEnumerable<CourseModel>
@using IdentityNLayer.Core.Entities
@using Microsoft.AspNetCore.Identity
@inject IdentityNLayer.BLL.Interfaces.ICourseService courseService
@inject IdentityNLayer.BLL.Interfaces.IGroupService groupService
@inject IdentityNLayer.BLL.Interfaces.IStudentService studentService
@inject UserManager<Person> userManager
@{
    ViewData["Title"] = "Courses";
}

<h1>Index</h1>

@if (Context.User.IsInRole("Admin"))
{
    <p>
        <a asp-action="Create">Create New</a>
    </p>
}
@await Html.PartialAsync("Partial/_Search", Model.FirstOrDefault()?.CourseFilter)
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Title)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Topic)
            </th>
            <th>
                Lessons
            </th>
            <th>
                @if (User.IsInRole("Admin"))
                {

                    <span>Requests(Students | Teachers)</span>
                }
                else
                {
                    <span>Action</span>
                }
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @{
                        string action = "Details";
                    }
                    @if (Context.User.IsInRole("Admin"))
                    {
                        action = "Edit";
                    }
                    <a asp-action="@action" asp-route-id="@item.Id">
                        @Html.DisplayFor(modelItem => item.Title)
                    </a>
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Topic.Title)
                </td>
                <td>
                    @if (User.IsInRole("Admin"))
                    {
                        <a asp-controller="Lessons" asp-action="Create" asp-route-courseId="@item.Id">

                            @if (item.Lessons?.Count() != 0)
                            {
                                <span>See All Lessons</span>
                            }
                            else
                            {
                                <span>Add Lessons</span>
                            }
                        </a>
                    }
                    else
                    {
                        <span>@item.Lessons.Count()</span>
                    }
                </td>
                <td>
                    @if (Context.User.IsInRole("Admin") || Context.User.IsInRole("Methodist"))
                    {
                        <span>@((await courseService.GetStudentRequests(item.Id)).Count())</span>
                        <span>|</span> <span>@((await courseService.GetTeacherRequests(item.Id)).Count())</span>
                    }
                    else
                    {
                        @if (!(await courseService.HasRequest(item.Id, (await userManager.GetUserAsync(Context.User)).Id, UserRoles.Student)))
                        {
                            @if (!(await courseService.HasRequest(item.Id, (await userManager.GetUserAsync(Context.User)).Id, UserRoles.Teacher)))
                            {
                                Group yourGroup = null;
                                foreach (Group gr in await courseService.GetGroups(item.Id, GroupStatus.Pending))
                                {
                                    if ((await groupService.GetCurrentTeacher(gr.Id))?.UserId == userManager.GetUserId(User))
                                        yourGroup = gr;
                                }
                                if (yourGroup != null)
                                {
                                    <span>
                                        You are already in the <a asp-controller="Groups" asp-action="Details" asp-route-id="@yourGroup.Id.ToString()">@yourGroup.Number</a>
                                        group like a Teacher
                                    </span>
                                }
                                else
                                {
                                    foreach (Student st in await groupService.GetStudents(item.Id, UserGroupStates.Applied))
                                    {
                                        if (st != null)
                                            if (st.UserId == userManager.GetUserId(User))
                                                yourGroup = await studentService.GetGroupByCourseIdAsync(st.Id, item.Id);
                                    }
                                    if (yourGroup != null)
                                    {
                                        <span>
                                            You are already in the <a asp-controller="Groups" asp-action="Details" asp-route-id="@yourGroup.Id.ToString()">@yourGroup.Number</a>
                                            group like a Student
                                        </span>
                                    }
                                    else
                                    {
                                        <a asp-controller="Teachers" asp-route-courseId="@item.Id.ToString()"
                                           asp-action="SendRequest">Teacher Request</a>
                                        <a asp-controller="Students" asp-route-courseId="@item.Id.ToString()"
                                           asp-action="SendRequest">Student Request</a>
                                    }
                                }
                            }
                            else
                            {
                                <span>Teacher Request Has Been Sent</span>
                                <form asp-controller="Teachers" asp-action="CancelRequest">
                                    <input type="hidden" name="courseId" value="@item.Id.ToString()" />
                                    <button type="submit" class="btn btn-warning">Cancel</button>
                                </form>
                            }
                        }
                        else
                        {
                            <span>Student Request Has Been Sent</span>
                            <form asp-controller="Students" asp-action="CancelRequest">
                                <input type="hidden" name="courseId" value="@item.Id.ToString()" />
                                <button type="submit" class="btn btn-warning">Cancel</button>
                            </form>
                        }
                    }
                </td>
            </tr>
        }
    </tbody>
</table>

