@model IdentityNLayer.Models.GroupModel
@inject IdentityNLayer.BLL.Interfaces.ICourseService courseService
@inject IdentityNLayer.BLL.Interfaces.IGroupService groupService
@using AutoMapper
@inject IMapper mapper
@using IdentityNLayer.Core.Entities
@{
    ViewData["Title"] = "Edit";
}

<h1>Edit</h1>

<h4>Group</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />
            <input type="hidden" asp-for="CourseId" />
            <div class="form-group">
                <label asp-for="Number" class="control-label"></label>
                <input asp-for="Number" class="form-control" />
                <span asp-validation-for="Number" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Status" class="control-label"></label>
                <select asp-for="Status" asp-items="@Html.GetEnumSelectList<GroupStatus>()"></select>
                <span asp-validation-for="Status" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label class="control-label">TeacherRequests</label>
                @if (groupService.GetTeachers(Model.Id) != null)
                {
                    SelectList list = new(mapper.Map<IEnumerable<TeacherModel>>(groupService.GetTeachers(Convert.ToInt32(Model.CourseId))), "Id", "Name");
                    if (groupService.GetCurrentTeacher(Model.Id) != null)
                        list = new(mapper.Map<IEnumerable<TeacherModel>>(groupService.GetTeachers(Convert.ToInt32(Model.CourseId))),
                            "Id", "Name", groupService.GetCurrentTeacher(Model.Id).Id);
                    @Html.DropDownListFor(model => model.TeacherId, list, "Teacher is not selected...");
                }
                else
                {
                    <span>No Teacher Requests</span>
                }
            </div>
            <div class="form-group">
                <label asp-for="StudentRequests" class="control-label"></label>
                @for (int i = 0; i < groupService.GetStudents(Convert.ToInt32(Model.CourseId)).Count(); ++i)
                {
                    <input type="hidden" asp-for="@Model.StudentRequests[i].UserId" />
                    <input type="hidden" asp-for="@Model.StudentRequests[i].UserName" />
                    @Html.CheckBoxFor(m => m.StudentRequests[i].Applied)
                    @Model.StudentRequests[i].UserName
                }
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
