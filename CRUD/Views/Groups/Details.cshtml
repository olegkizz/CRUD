@model IdentityNLayer.Models.GroupModel
@inject IdentityNLayer.BLL.Interfaces.IGroupService groupService
@using IdentityNLayer.Core.Entities
@using System.Linq;

<h1>Details @Model.Number group</h1>

<div>
    <h4>Group</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Number)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Number)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Status)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Status)
        </dd>
        <dt class="col-sm-2">
            Teacher Link To Profile
        </dt>
        <dd class="col-sm-10">
            @Html.RouteLink(Model.Teacher?.FirstName + " " + Model.Teacher?.LastName, Model.Teacher?.LinkToProfile)
        </dd>
        <dt class="col-sm-2">
            Number Of Students
        </dt>
        <dd class="col-sm-10">
            @groupService.GetStudents(Model.Id, UserGroupStates.Applied).Count()
        </dd>
    </dl>
</div>
<div>
    @if (User.IsInRole("Admin") || User.IsInRole("Manager"))
    {
        <a asp-action="Edit" asp-route-id="@Model.Id">Edit</a>
    }
    <a asp-action="Index">Back to List</a>
</div>
