@model IdentityNLayer.Models.StudentModel
@inject IdentityNLayer.BLL.Interfaces.IStudentService studentService
@inject IdentityNLayer.BLL.Interfaces.IStudentMarkService studentMarkService
@inject IdentityNLayer.BLL.Interfaces.ICourseService courseService
@using  IdentityNLayer.Core.Entities
@{
    ViewData["Title"] = "Edit";
}

<h1>Edit</h1>

<h4>Contact</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />
            <input type="hidden" name="id" value="@Model.Id" />
            <div class="form-group">
                <label asp-for="Type" class="control-label"></label>
                <select asp-for="Type" class="form-control">
                    @if (Model.StudentTypes != null) foreach (var st in (Array)Model.StudentTypes)
                        {
                            <option value="@st">@st</option>
                        }
                </select>
                <span asp-validation-for="Type" class="text-danger"></span>
            </div>
            <div class="form-group">
                @{
                    List<Group> studentGroups = (await studentService.GetStudentGroupsAsync(Model.Id)).ToList();
                }
                <label class="control-label">Your Assign Groups Like Student</label>
                @foreach (Group gr in studentGroups)
                {
                    <span class="form-control"><a asp-controller="Groups" asp-action="Details" asp-route-id="@gr.Id">@gr.Number </a></span>
                }
                <label class="control-label">Your Finished Courses</label>
                @foreach (StudentMark studentMark in await studentMarkService.GetMarksOfCoursesAsync(Model.Id))
                {
                    <span class="form-control">
                        <a asp-controller="Courses" asp-action="Details"
                           asp-route-id="@studentMark.CourseId">
                            @((await courseService.GetByIdAsync(studentMark.CourseId ?? 0)).Title) (Mark:
                            @studentMark.Mark )
                        </a>
                    </span>
                }
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
