@using IdentityNLayer.Models
@model IdentityNLayer.Models.StudentModel


@{
    ViewData["Title"] = "Edit";
}

<h1>Edit</h1>

<h4>Contact</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="FirstName" class="control-label"></label>
                <input asp-for="FirstName" class="form-control" />
                <span asp-validation-for="FirstName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="LastName" class="control-label"></label>
                <input asp-for="LastName" class="form-control" />
                <span asp-validation-for="LastName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Email" class="control-label"></label>
                <input asp-for="Email" class="form-control" />
                <span asp-validation-for="Email" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="BirthDate" class="control-label"></label>
                <input asp-for="BirthDate" type="date" class="form-control" />
                @Html.ValidationMessageFor(m => m.BirthDate, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                <label asp-for="Phone" class="control-label"></label>
                <input asp-for="Phone" class="form-control" />
                <span asp-validation-for="Phone" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Type" class="control-label"></label>
                <select asp-for="Type" class="form-control">
                    @if (ViewBag.StudentTypes != null) foreach (var st in (Array)ViewBag.StudentTypes)
                        {
                            <option value="@st">@st</option>
                        }
                </select>
                <span asp-validation-for="Type" class="text-danger"></span>
            </div>
           @* <div class="form-group">
                <label asp-for="AssignGroupId" class="control-label"></label>
                @Html.CheckBoxFor(m.AssignGroups => m.AssignGroups)
            </div>*@
            <div class="form-group">
                @{
                    int cnt = 0;

                    foreach (var groups in Model.AssignGroups)
                    {
                        if (cnt++ % 3 == 0)
                        {
                            @:</tr><tr>
                            }
                            @:<td>
                                <input type="checkbox"
                                       name="AssignGroups"
                                       value="@groups.GroupID"
                                       @(Html.Raw(groups.Assigned ? "checked=\"checked\"" : "")) />
                                @groups.GroupID @:  @groups.Number
                            @:</td>
                        }
                    @:</tr>
                }
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
