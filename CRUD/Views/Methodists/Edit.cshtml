@model IdentityNLayer.Core.Entities.Methodist
@inject IdentityNLayer.BLL.Interfaces.IGroupService groupService
@using IdentityNLayer.Core.Entities
@{
    ViewData["Title"] = "Edit";
}

<h1>Edit</h1>

<h4>Manager</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />
            <div class="form-group">
                <label asp-for="LinkToContact" class="control-label"></label>
                <input asp-for="LinkToContact" class="form-control" />
                <span asp-validation-for="LinkToContact" class="text-danger"></span>
            </div>
            <label class="control-label">Assign Groups Like Methodist</label>
            @{
                IEnumerable<Group> methodistGroups = await groupService.GetMethodistGroups(Model.UserId);
            }
            @if (methodistGroups.Any()) foreach (Group gr in methodistGroups)
                {
                    <span class="form-control"><a asp-controller="Groups" asp-action="Edit" asp-route-id="@gr.Id.ToString()">@gr.Number </a></span>
                }
            else
            {
                <span class="form-control">Not assigned into some group.</span>
            }
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
